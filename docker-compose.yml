---
services:
  gluetun:
    # https://github.com/qdm12/gluetun
    image: ghcr.io/qdm12/gluetun:latest
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect. See https://github.com/qdm12/gluetun/wiki/Connect-a-container-to-gluetun#external-container-to-gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - ./config/gluetun:/gluetun
      # If using ProtonVPN with OpenVPN, this path needs to be set to the downloaded .ovpn file
      # - ./config/ovpn_config/ovpn_config.udp.ovpn:/gluetun/custom.conf:ro
    environment:
      # See https://github.com/qdm12/gluetun/wiki
      ## ProtonVPN Wireguard
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - VPN_ENDPOINT_IP=
      - VPN_ENDPOINT_PORT=
      - WIREGUARD_PUBLIC_KEY=
      - WIREGUARD_PRIVATE_KEY=
      - WIREGUARD_ADDRESSES=
      ## ProtonVPN OpenVPN
      # - VPN_SERVICE_PROVIDER=custom
      # - VPN_TYPE=openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf
      # See https://protonvpn.com/support/port-forwarding-manual-setup/
      # - OPENVPN_USER=<username>+pmp
      # - OPENVPN_PASSWORD=
      # Timezone for accurate log times
      - TZ=${TZ}
      # Server list updater. See https://github.com/qdm12/gluetun/wiki/Updating-Servers#periodic-update
      - UPDATER_PERIOD=
      - UPDATER_VPN_SERVICE_PROVIDERS=
      # If QBITTORRENT_SERVER address is not related to VPN_IF_NAME (default: tun0) you'll need to set the variable below
      # - FIREWALL_OUTBOUND_SUBNETS=172.16.0.0/24
    ports:
      - 8080:8080/tcp # qBittorrent
      - 2468:2468 # cross-seed
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8686:8686 # lidarr
      - 9117:9117 # jackett
      - 7474:7474 # autobrr
      - 8191:8191 # flaresolverr
      - 9696:9696 # prowlarr

  qbittorrent:
    image: qbittorrentofficial/qbittorrent-nox:latest
    container_name: qbittorrent
    restart: unless-stopped
    volumes:
      - ./config/qBittorrent/config:/config
      - ./downloads:/downloads
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    network_mode: "service:gluetun"
    tmpfs:
      - /tmp
    depends_on:
      gluetun:
        condition: service_healthy

  qbittorrent-natmap:
    # https://github.com/soxfor/qbittorrent-natmap
    image: ghcr.io/soxfor/qbittorrent-natmap:latest
    container_name: qbittorrent-natmap
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=${TZ}
    network_mode: "service:gluetun"
    depends_on:
      qbittorrent:
        condition: service_started
      gluetun:
        condition: service_healthy

 qbittools:
  image: registry.gitlab.com/alexkm/qbittools
  network_mode: "service:gluetun"
  container_name: qbittools
  volumes:
  - ./config/qBittorrent/config:/qBittorrent
  command: reannounce -C /qBittorrent/qBittorrent.conf
  restart: unless-stopped
  
   cross-seed:
  image: crossseed/cross-seed:latest
  network_mode: "service:gluetun"
  container_name: cross-seed
  user: ${PUID}:${PGID}
  volumes:
   - ./config/cross-seed:/config
   - ./config/qBittorrent/data/BT_backup:/torrents
   - ./downloads:/downloads
  command: daemon
  restart: unless-stopped
  
 flaresolverr:
  image: ghcr.io/flaresolverr/flaresolverr:latest
  container_name: flaresolverr
  network_mode: "service:gluetun"
  environment:
   - LOG_LEVEL=${LOG_LEVEL:-info}
   - LOG_HTML=${LOG_HTML:-false}
   - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
   - TZ=${TZ}
  restart: unless-stopped
  
 autobrr:
  container_name: autobrr
  image: ghcr.io/autobrr/autobrr:latest
  network_mode: "service:gluetun"
  restart: unless-stopped
  user: ${PUID}:${PGID}
  environment:
   - TZ=${TZ}
  volumes:
   - ./config/autobrr:/config
 
 lidarr:
  container_name: lidarr
  network_mode: "service:gluetun"
  restart: unless-stopped
  volumes:
    - ./config/Lidarr:/config
    - ./downloads/music:/downloads/music
  environment:
   - PUID=${PUID}
   - PGID=${PGID}
   - TZ=${TZ}
  image: linuxserver/lidarr

 jackett:
  container_name: jackett
  network_mode: "service:gluetun"
  restart: unless-stopped
  volumes:
   - ./config:/config
  environment:
   - PUID=${PUID}
   - PGID=${PGID}
   - TZ=${TZ}
  image: linuxserver/jackett
  
 sonarr:
  container_name: sonarr
  network_mode: "service:gluetun"
  restart: unless-stopped
  volumes:
    - ./config/Sonarr:/config
    - ./downloads/tvshows:/downloads/tvshows
  environment:
   - PUID=${PUID}
   - PGID=${PGID}
   - TZ=${TZ}
  image: linuxserver/sonarr
  
 radarr:
  container_name: radarr
  network_mode: "service:gluetun"
  restart: unless-stopped
  volumes:
    - ./config/Radarr:/config
    - ./downloads/movies:/downloads/movies
  environment:
   - PUID=${PUID}
   - PGID=${PGID}
   - TZ=${TZ}
  image: linuxserver/radarr

 prowlarr:
  image: lscr.io/linuxserver/prowlarr:latest
  container_name: prowlarr
  network_mode: "service:gluetun"
  environment:
   - PUID=${PUID}
   - PGID=${PGID}
   - TZ=${TZ}
  volumes:
   - ./config/prowlarr:/config
  restart: unless-stopped
